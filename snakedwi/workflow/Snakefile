configfile: "config/snakebids.yml"


# Workflow setup
include: "rules/setup.smk"
include: "rules/common.smk"
include: "rules/workflowopts.smk"
# Anatomical
include: "rules/anatomical/anatomical.smk"
include: "rules/anatomical/reg_t1_to_template.smk"
include: "rules/anatomical/seg_t1_brain_tissue.smk"
# Pre-SDC
include: "rules/diffusion/method_grabber.smk"
include: "rules/diffusion/prepdwi.smk"
include: "rules/diffusion/motioncorr.smk"
# B0 Masking
include: "rules/diffusion/masking/masking_bet_from-b0.smk"
include: "rules/diffusion/masking/masking_b0_to_template.smk"
include: "rules/diffusion/masking/masking_b0_synthstrip.smk"
# SDC
include: "rules/gradcorrect.smk"
include: "rules/diffusion/sdc/topup.smk"
include: "rules/diffusion/sdc/sdcflow.smk"
include: "rules/diffusion/sdc/synthsr.smk"
include: "rules/diffusion/sdc/synb0.smk"
# Post-SDC
include: "rules/diffusion/eddy.smk"
include: "rules/diffusion/reg_dwi_to_t1.smk"
include: "rules/diffusion/bedpost.smk"


localrules:
    check_subj_dwi_metadata,


# Currently unused
# include: rules/other.smk
# include: rules/templateflow.smk
# include: rules/visqc.smk


# Incompatible config options
if config["use_eddy_s2v"] and not config["use_eddy_gpu"]:
    print(
        "ERROR: Eddy Slice-to-volume correction (--use-eddy-s2v) must be used "
        "with eddy GPU (--use-eddy-gpu)."
    )
    sys.exit(1)

if (
    config["sdc_method"] == "synb0" or config["sdc_method_alternate"] == "synb0"
) and not config["fs_license"]:
    print(
        "ERROR: Freesurfer license (--fs-license) must be provided with synb0 "
        "SDC method (--sdc-method[-alternate] synb0)"
    )
    sys.exit(1)


rule all:
    input:
        **get_eddy_quad_all(),
        **get_bedpost_all(),
        mask_qc=expand(rules.qc_b0_brainmask.output.png, zip, **subj_zip_list),
        reg_qc=expand(rules.qc_reg_dwi_t1.output.png, zip, **subj_zip_list),
        dtifit=expand(
            bids(
                root=root,
                datatype="dwi",
                suffix="dtifit",
                desc="eddy",
                space="T1w",
                res=config["resample_dwi"]["resample_scheme"],
                **subj_wildcards
            ),
            zip,
            **subj_zip_list
        ),


rule all_metacheck:
    input:
        missing_subj_tsv=rules.create_missing_subj_tsv.output.tsv,
        metadata_subj_tsv=rules.concat_subj_metadata.output.tsv,
