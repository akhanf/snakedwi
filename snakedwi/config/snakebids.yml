bids_dir: 'test_data/bids_multishell_downsampled'
output_dir: 'test_output/snakedwi_multishell_downsampled'

#enable printing debug statements during parsing -- disable if generating dag visualization
debug: False


# boilerplate above

derivatives: False

#mappings from analysis_level to set of target rules or files
analysis_levels: &analysis_levels
 - participant

no_topup: False
eddy_no_s2v: False
eddy_no_quad: False
no_bedpost: False

targets_by_analysis_level:
  participant:
    - ''  # if '', then the first rule is run

pybids_inputs:
  dwi:
    filters:
      suffix: 'dwi'
      extension: '.nii.gz'
      scope: 'raw' #raw, derivatives (or can be pipeline name too!)
      invalid_filters: 'allow'
      datatype: 'dwi'
    wildcards:
      - subject
      - session
      - acquisition
      - run
      - direction

  T1w:
    filters:
      suffix: 'T1w'
      extension: '.nii.gz'
      scope: 'raw' #raw, derivatives (or can be pipeline name too!)
      datatype: 'anat'
      invalid_filters: 'allow'
      space: null
    wildcards:
      - subject
      - session
      - acquisition
      - run

   

#these are the command-line parameters
parse_args:

  bids_dir:
    help: The directory with the input dataset formatted according 
          to the BIDS standard.

  output_dir:
    help: The directory where the output files 
          should be stored. If you are running group level analysis
          this folder should be prepopulated with the results of the
          participant level analysis.

  analysis_level: 
    help: Level of the analysis that will be performed. 
    choices: *analysis_levels

  --participant_label:
    help: The label(s) of the participant(s) that should be analyzed. The label 
          corresponds to sub-<participant_label> from the BIDS spec 
          (so it does not include "sub-"). If this parameter is not 
          provided all subjects should be analyzed. Multiple 
          participants can be specified with a space separated list.
    nargs: '+'

  --exclude_participant_label:
    help: The label(s) of the participant(s) that should be excluded. The label 
          corresponds to sub-<participant_label> from the BIDS spec 
          (so it does not include "sub-"). If this parameter is not 
          provided all subjects should be analyzed. Multiple 
          participants can be specified with a space separated list.
    nargs: '+'

  --no_topup:
    help: 'Disable topup  (default: %(default)s)'
    action: 'store_true'
    default: False

  --no_bedpost:
    help: 'Disable bedpost  (default: %(default)s)'
    action: 'store_true'
    default: False

   
  --eddy_no_s2v:
    help: 'Disables slice-to-volume in eddy. This option must be used
          if your dwi json does not include SliceTiming (default: %(default)s)'
    action: 'store_true'
    default: False

  --eddy_no_quad:
    help: 'Disables eddy_quad QC report (default: %(default)s)'
    action: 'store_true'
    default: False

  --masking_method:
    help: 'Brain masking method to use (default: %(default)s)'
    nargs: '?'
    choices: 
      - 'b0_BET'
      - 'b0_SyN'
    default: 'b0_BET'

  --b0_bet_frac:
    help: 'BET fractional intensity threshold for b0 masking (default: %(default)s)'
    default: 0.5

  --slspec_txt:
    help: 'Path to custom slspec txt file for use with eddy. Must use this if SliceTiming does not exist in the JSON (default: %(default)s)'
    default: False
    type: Path


  --use_gpu_eddy_container:
    help: 'Use GPU-based eddy container'
    action: 'store_true'
    default: False


  --use_gpu_bedpost_container:
    help: 'Use GPU-based bedpost container'
    action: 'store_true'
    default: False

#---- to update below this

singularity:
  prepdwi: 'docker://khanlab/prepdwi:latest' 
  mrtrix: 'docker://mrtrix3/mrtrix3:3.0.3'
  fsl: 'docker://brainlife/fsl:6.0.4-patched2' 
  fsl_cpu: '/project/6050199/akhanf/singularity/bids-apps/brainlife_fsl_6.0.4-patched2.sif' #fsl_cpu and fsl_gpu must have absolute paths instead of docker uri - since they are used for rules where we explicitly include singularity exec in the command (eddy, bedpost)
  fsl_gpu: '/project/6050199/akhanf/singularity/bids-apps/fsl_6.0.3_cuda9.1.sif'
  itksnap: 'docker://khanlab/itksnap:latest' 
  ants: 'docker://kaczmarj/ants:2.3.4'  
  niftyreg: 'docker://vnmd/niftyreg_2014.14.11:latest'
  python: 'docker://akhanf/snakedwi-pythondeps:master'  



# Options for resampling dwi in T1w space
#  1. can resample as T1w resolution
#  2. can resample as original dwi resolution 
#  3. can resample as specified resolution

resample_dwi:
  resample_scheme: 'orig' # should be one of: ['T1w', 'orig', 'custom']
  custom_resolution: #only needed if the 'custom' 
  resample_mm: 
    - 1.0
    - 1.0
    - 1.0


#masking options, provides customization at a per subject level.. 
masking:
  default_method: 'bet_from-b0_frac-1' #b0SyN_from-MNI152NLin2009cSym' #default method to use for brainmasking
  methods: # list of methods (for QC report)
    - 'bet_from-b0'
    - 'bet_from-b0_frac-4'
    - 'b0SyN_from-MNI152NLin2009cSym'
  import_path: #only required if the import_mask - not implemented yet..
    - '/path/to/mask_to_import/sub-{subject}_mask.nii.gz'
  custom: #use this to set a custom method for a particular subject
    #'0015': 'bet_from-b0_frac-4'
    '0015': 'b0SyN_from-MNI152NLin2009cSym'

template: MNI152NLin2009cSym


template_t1w: resources/tpl-{template}/tpl-{template}_res-1_T1w.nii.gz
template_mask: resources/tpl-{template}/tpl-{template}_res-1_desc-brain_mask.nii.gz 

        
#avg bshell images are used for registration for brainmasking dwi
template_b0: resources/tpl-{template}/tpl-{template}_res-dwi_desc-fromhcp_b0.nii.gz

template_atlas_dseg_nii: resources/tpl-{template}/tpl-{template}_res-1_atlas-{atlas}_dseg.nii.gz
template_atlas_dseg_tsv: resources/tpl-{template}/tpl-{template}_atlas-{atlas}_dseg.tsv

template_tissue_probseg: resources/tpl-{template}/tpl-{template}_res-1_label-{tissue}_probseg.nii.gz

#number of times to dilate  (each time 3x3x3 mode dilation)
n_atlas_dilate: 3
n_init_mask_dilate: 1 

default_k_tissue_classes: 4 #use higher than 3 to capture contrast-enhanced regions too

#--- NOT SURE WHAT TO DO WITH THIS:
#use this to specify custom values for subjects, e.g. here sub-P001 will have k=4 tissue classes for Atropos initialization
subject_k_tissue_classes:
    P001: 4




tissue_labels:
  - GM
  - WM
  - CSF

atlases:
  - CerebrA


ants:
  dim: 3
  random_seed: 42 #requires ants version at least 2.3.1 (includes --random-seed option)
  intensity_opts: '-u 1 -w [0.01,0.99] -z 1'
  linear:
    reg_iterations: '1000x500x250x0'
    shrink_factors: '6x4x2x1'
    smoothing_factors: '4x2x1x0'
  deform:
    shrink_factors: '12x6x4x2x1'  # default in antsMVTC2: 6x4x2x1 
    smoothing_factors: '6x3x2x1x0vox' # default in antsMVTC2: 3x2x1x0 
    reg_iterations: '100x100x70x50x10' # default in antsMVTC2: 100x100x70x20 
    transform_model: 'SyN[0.1,3,0]'
    sim_metric: CC
  shape_update:
  gradient_step: 0.25

#we convert flags and opts automatically 
#so feel free to prescribe options that are not included here 
#as long as they are passed to eddy using --name_of_flag or --name_of_opts=value
eddy:
  flags:
    verbose: True
    repol: True
    cnr_maps: True
    residuals: True
    data_is_shelled: True
  with_s2v:
    mporder: 6
    s2v_niter: 5
    s2v_lambda: 1
    s2v_interp: trilinear
    ol_type: 'both'  #can be sw, gw, or both (use sw if no multi-band)
  without_s2v:
    ol_type: 'sw'  #can be sw, gw, or both (use sw if no multi-band)


default_effective_echo_spacing: 0.0001 #if not defined in JSON files

#for test data
participant_label: 
exclude_participant_label:
masking_method: b0_BET
b0_bet_frac: 0.5
slspec_txt: False
eddy_no_s2v: True
no_bedpost: True
root: 'results'
